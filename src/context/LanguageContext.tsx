
import React, { createContext, useContext, useState, useEffect } from 'react';

export type Language = 'english' | 'malayalam' | 'tamil';

interface LanguageContextType {
  language: Language;
  setLanguage: (language: Language) => void;
  t: (key: string) => string;
}

const translations = {
  english: {
    welcome: 'Hello! Welcome to our delivery service! ЁЯСЛ',
    loginMessage: 'To place an order, please log in with your phone number. If you\'re a new customer, we\'ll create an account for you.',
    loginRegister: 'Login / Register',
    welcomeBack: 'Welcome back',
    chooseCategory: 'I\'m here to help you place an order. Let\'s start by choosing a category.',
    phoneNumber: 'Phone Number',
    enterPhone: 'Enter your phone number',
    continue: 'Continue',
    cancel: 'Cancel',
    name: 'What\'s your name?',
    address: 'Great! Now please provide your delivery address:',
    registrationSuccess: 'Perfect! Your account has been created',
    chooseShop: 'Great choice! Now please choose a shop:',
    loadingShops: 'Loading shops...',
    loadingProducts: 'Loading products...',
    noShops: 'Sorry, no shops are currently available for',
    noProducts: 'Sorry, no products are currently available from',
    addedToCart: 'Item added to cart! You can continue shopping or proceed to checkout when ready.',
    continueShopping: 'Continue Shopping',
    proceedToCheckout: 'Proceed to Checkout',
    orderSummary: 'Perfect! Here\'s your order summary:',
    category: 'Category',
    shop: 'Shop',
    items: 'Items',
    total: 'Total',
    confirmOrder: 'Would you like to confirm this order?',
    confirmOrderBtn: 'Confirm Order',
    editOrder: 'Edit Order',
    orderSuccess: 'ЁЯОЙ Order placed successfully!',
    orderMessage: 'Your order has been automatically sent to our admin panel and will be processed shortly. You will receive updates on your order status. Thank you for choosing our service!',
    food: 'Food',
    grocery: 'Grocery',
    vegetables: 'Vegetables',
    meat: 'Meat',
    orderAssistant: 'Order Assistant',
    selectLanguage: 'Select Language'
  },
  malayalam: {
    welcome: 'р┤╣р┤▓р╡Л! р┤Юр┤Щр╡Нр┤Щр┤│р╡Бр┤Яр╡Ж р┤бр╡Жр┤▓р┤┐р┤╡р┤▒р┤┐ р┤╕р╡Зр┤╡р┤ир┤др╡Нр┤др┤┐р┤▓р╡Зр┤Хр╡Нр┤Хр╡Н р┤╕р╡Нр┤╡р┤╛р┤Чр┤др┤В! ЁЯСЛ',
    loginMessage: 'р┤Ур╡╝р┤бр╡╝ р┤Ър╡Жр┤пр╡Нр┤пр┤╛р╡╗, р┤жр┤пр┤╡р┤╛р┤пр┤┐ р┤ир┤┐р┤Щр╡Нр┤Щр┤│р╡Бр┤Яр╡Ж р┤лр╡Лр╡║ р┤ир┤ор╡Нр┤кр╡╝ р┤Йр┤кр┤пр╡Лр┤Чр┤┐р┤Ър╡Нр┤Ър╡Н р┤▓р╡Лр┤Чр┤┐р╡╗ р┤Ър╡Жр┤пр╡Нр┤пр╡Бр┤Х. р┤ир┤┐р┤Щр╡Нр┤Щр╡╛ р┤кр╡Бр┤др┤┐р┤п р┤Йр┤кр┤нр╡Лр┤Хр╡Нр┤др┤╛р┤╡р┤╛р┤гр╡Жр┤Щр╡Нр┤Хр┤┐р╡╜, р┤Юр┤Щр╡Нр┤Щр╡╛ р┤ир┤┐р┤Щр╡Нр┤Щр╡╛р┤Хр╡Нр┤Хр╡Н р┤Тр┤░р╡Б р┤Ер┤Хр╡Нр┤Хр╡Чр┤гр╡Нр┤Яр╡Н р┤╕р╡Гр┤╖р╡Нр┤Яр┤┐р┤Хр╡Нр┤Хр╡Бр┤В.',
    loginRegister: 'р┤▓р╡Лр┤Чр┤┐р╡╗ / р┤░р┤Ьр┤┐р┤╕р╡Нр┤▒р╡Нр┤▒р╡╝',
    welcomeBack: 'р┤др┤┐р┤░р┤┐р┤Хр╡Ж р┤╕р╡Нр┤╡р┤╛р┤Чр┤др┤В',
    chooseCategory: 'р┤Юр┤╛р╡╗ р┤ир┤┐р┤Щр╡Нр┤Щр┤│р╡Ж р┤Ур╡╝р┤бр╡╝ р┤Ър╡Жр┤пр╡Нр┤пр┤╛р╡╗ р┤╕р┤╣р┤╛р┤пр┤┐р┤Хр╡Нр┤Хр┤╛р╡╗ р┤Зр┤╡р┤┐р┤Яр╡Жр┤пр╡Бр┤гр╡Нр┤Яр╡Н. р┤Тр┤░р╡Б р┤╡р┤┐р┤нр┤╛р┤Чр┤В р┤др┤┐р┤░р┤Юр╡Нр┤Юр╡Жр┤Яр╡Бр┤др╡Нр┤др╡Н р┤Жр┤░р┤Вр┤нр┤┐р┤Хр╡Нр┤Хр┤╛р┤В.',
    phoneNumber: 'р┤лр╡Лр╡║ р┤ир┤ор╡Нр┤кр╡╝',
    enterPhone: 'р┤ир┤┐р┤Щр╡Нр┤Щр┤│р╡Бр┤Яр╡Ж р┤лр╡Лр╡║ р┤ир┤ор╡Нр┤кр╡╝ р┤ир╡╜р┤Хр╡Бр┤Х',
    continue: 'р┤др╡Бр┤Яр┤░р╡Бр┤Х',
    cancel: 'р┤▒р┤жр╡Нр┤жр┤╛р┤Хр╡Нр┤Хр╡Бр┤Х',
    name: 'р┤ир┤┐р┤Щр╡Нр┤Щр┤│р╡Бр┤Яр╡Ж р┤кр╡Зр┤░р╡Н р┤Ор┤ир╡Нр┤др┤╛р┤гр╡Н?',
    address: 'р┤ор┤┐р┤Хр┤Ър╡Нр┤Ър┤др╡Н! р┤Зр┤кр╡Нр┤кр╡Лр╡╛ р┤жр┤пр┤╡р┤╛р┤пр┤┐ р┤ир┤┐р┤Щр╡Нр┤Щр┤│р╡Бр┤Яр╡Ж р┤бр╡Жр┤▓р┤┐р┤╡р┤▒р┤┐ р┤╡р┤┐р┤▓р┤╛р┤╕р┤В р┤ир╡╜р┤Хр╡Бр┤Х:',
    registrationSuccess: 'р┤ор┤┐р┤Хр┤Ър╡Нр┤Ър┤др╡Н! р┤ир┤┐р┤Щр╡Нр┤Щр┤│р╡Бр┤Яр╡Ж р┤Ер┤Хр╡Нр┤Хр╡Чр┤гр╡Нр┤Яр╡Н р┤╕р╡Гр┤╖р╡Нр┤Яр┤┐р┤Хр╡Нр┤Хр┤кр╡Нр┤кр╡Жр┤Яр╡Нр┤Яр╡Б',
    chooseShop: 'р┤ор┤┐р┤Хр┤Ър╡Нр┤Ъ р┤др┤┐р┤░р┤Юр╡Нр┤Юр╡Жр┤Яр╡Бр┤кр╡Нр┤кр╡Н! р┤Зр┤кр╡Нр┤кр╡Лр╡╛ р┤жр┤пр┤╡р┤╛р┤пр┤┐ р┤Тр┤░р╡Б р┤Хр┤Я р┤др┤┐р┤░р┤Юр╡Нр┤Юр╡Жр┤Яр╡Бр┤Хр╡Нр┤Хр╡Бр┤Х:',
    loadingShops: 'р┤Хр┤Яр┤Хр╡╛ р┤▓р╡Лр┤бр╡Н р┤Ър╡Жр┤пр╡Нр┤пр╡Бр┤ир╡Нр┤ир╡Б...',
    loadingProducts: 'р┤Йр╡╜р┤кр╡Нр┤кр┤ир╡Нр┤ир┤Щр╡Нр┤Щр╡╛ р┤▓р╡Лр┤бр╡Н р┤Ър╡Жр┤пр╡Нр┤пр╡Бр┤ир╡Нр┤ир╡Б...',
    noShops: 'р┤Хр╡Нр┤╖р┤ор┤┐р┤Хр╡Нр┤Хр┤гр┤В, р┤Зр┤кр╡Нр┤кр╡Лр╡╛ р┤Хр┤Яр┤Хр╡╛ р┤▓р┤нр╡Нр┤пр┤ор┤▓р╡Нр┤▓',
    noProducts: 'р┤Хр╡Нр┤╖р┤ор┤┐р┤Хр╡Нр┤Хр┤гр┤В, р┤Зр┤кр╡Нр┤кр╡Лр╡╛ р┤Йр╡╜р┤кр╡Нр┤кр┤ир╡Нр┤ир┤Щр╡Нр┤Щр╡╛ р┤▓р┤нр╡Нр┤пр┤ор┤▓р╡Нр┤▓',
    addedToCart: 'р┤Зр┤ир┤В р┤Хр┤╛р╡╝р┤Яр╡Нр┤Яр┤┐р╡╜ р┤Ър╡Зр╡╝р┤др╡Нр┤др╡Б! р┤ир┤┐р┤Щр╡Нр┤Щр╡╛р┤Хр╡Нр┤Хр╡Н р┤╖р╡Лр┤кр╡Нр┤кр┤┐р┤Вр┤Чр╡Н р┤др╡Бр┤Яр┤░р┤╛р┤В р┤Ер┤▓р╡Нр┤▓р╡Жр┤Щр╡Нр┤Хр┤┐р╡╜ р┤Ър╡Жр┤Хр╡Нр┤Хр╡Нр┤Фр┤Яр╡Нр┤Яр┤┐р┤▓р╡Зр┤Хр╡Нр┤Хр╡Н р┤кр╡Лр┤Хр┤╛р┤В.',
    continueShopping: 'р┤╖р╡Лр┤кр╡Нр┤кр┤┐р┤Вр┤Чр╡Н р┤др╡Бр┤Яр┤░р╡Бр┤Х',
    proceedToCheckout: 'р┤Ър╡Жр┤Хр╡Нр┤Хр╡Нр┤Фр┤Яр╡Нр┤Яр┤┐р┤▓р╡Зр┤Хр╡Нр┤Хр╡Н р┤кр╡Лр┤Хр╡Бр┤Х',
    orderSummary: 'р┤ор┤┐р┤Хр┤Ър╡Нр┤Ър┤др╡Н! р┤Зр┤др┤╛ р┤ир┤┐р┤Щр╡Нр┤Щр┤│р╡Бр┤Яр╡Ж р┤Ур╡╝р┤бр╡╝ р┤╕р┤Вр┤Чр╡Нр┤░р┤╣р┤В:',
    category: 'р┤╡р┤┐р┤нр┤╛р┤Чр┤В',
    shop: 'р┤Хр┤Я',
    items: 'р┤Зр┤ир┤Щр╡Нр┤Щр╡╛',
    total: 'р┤Жр┤Хр╡Ж',
    confirmOrder: 'р┤И р┤Ур╡╝р┤бр╡╝ р┤╕р╡Нр┤ер┤┐р┤░р╡Ар┤Хр┤░р┤┐р┤Хр╡Нр┤Хр┤╛р╡╗ р┤ир┤┐р┤Щр╡Нр┤Щр╡╛ р┤Жр┤Чр╡Нр┤░р┤╣р┤┐р┤Хр╡Нр┤Хр╡Бр┤ир╡Нр┤ир╡Бр┤гр╡Нр┤Яр╡Л?',
    confirmOrderBtn: 'р┤Ур╡╝р┤бр╡╝ р┤╕р╡Нр┤ер┤┐р┤░р╡Ар┤Хр┤░р┤┐р┤Хр╡Нр┤Хр╡Бр┤Х',
    editOrder: 'р┤Ур╡╝р┤бр╡╝ р┤Ор┤бр┤┐р┤▒р╡Нр┤▒р╡Н р┤Ър╡Жр┤пр╡Нр┤пр╡Бр┤Х',
    orderSuccess: 'ЁЯОЙ р┤Ур╡╝р┤бр╡╝ р┤╡р┤┐р┤Ьр┤пр┤Хр┤░р┤ор┤╛р┤пр┤┐ р┤╕р╡Нр┤ер┤╛р┤кр┤┐р┤Ър╡Нр┤Ър╡Б!',
    orderMessage: 'р┤ир┤┐р┤Щр╡Нр┤Щр┤│р╡Бр┤Яр╡Ж р┤Ур╡╝р┤бр╡╝ р┤пр┤╛р┤ир╡Нр┤др╡Нр┤░р┤┐р┤Хр┤ор┤╛р┤пр┤┐ р┤Юр┤Щр╡Нр┤Щр┤│р╡Бр┤Яр╡Ж р┤Ер┤бр╡Нр┤ор┤┐р╡╗ р┤кр┤╛р┤ир┤▓р┤┐р┤▓р╡Зр┤Хр╡Нр┤Хр╡Н р┤Ер┤пр┤Ър╡Нр┤Ър╡Б, р┤Йр┤Яр╡╗ р┤кр╡Нр┤░р╡Лр┤╕р┤╕р╡Нр┤╕р╡Н р┤Ър╡Жр┤пр╡Нр┤пр╡Бр┤В. р┤ир┤┐р┤Щр╡Нр┤Щр┤│р╡Бр┤Яр╡Ж р┤Ур╡╝р┤бр╡╝ р┤╕р╡Нр┤▒р╡Нр┤▒р┤╛р┤▒р╡Нр┤▒р┤╕р╡Н р┤Ер┤кр╡Нр┤бр╡Зр┤▒р╡Нр┤▒р╡Бр┤Хр╡╛ р┤▓р┤нр┤┐р┤Хр╡Нр┤Хр╡Бр┤В. р┤Юр┤Щр╡Нр┤Щр┤│р╡Бр┤Яр╡Ж р┤╕р╡Зр┤╡р┤ир┤В р┤др┤┐р┤░р┤Юр╡Нр┤Юр╡Жр┤Яр╡Бр┤др╡Нр┤др┤др┤┐р┤ир╡Н р┤ир┤ир╡Нр┤жр┤┐!',
    food: 'р┤нр┤Хр╡Нр┤╖р┤гр┤В',
    grocery: 'р┤кр┤▓р┤Ър┤░р┤Хр╡Нр┤Хр╡Н',
    vegetables: 'р┤кр┤Ър╡Нр┤Ър┤Хр╡Нр┤Хр┤▒р┤┐р┤Хр╡╛',
    meat: 'р┤ор┤╛р┤Вр┤╕р┤В',
    orderAssistant: 'р┤Ур╡╝р┤бр╡╝ р┤Ер┤╕р┤┐р┤╕р╡Нр┤▒р╡Нр┤▒р┤ир╡Нр┤▒р╡Н',
    selectLanguage: 'р┤нр┤╛р┤╖ р┤др┤┐р┤░р┤Юр╡Нр┤Юр╡Жр┤Яр╡Бр┤Хр╡Нр┤Хр╡Бр┤Х'
  },
  tamil: {
    welcome: 'ро╡рогроХрпНроХроорпН! роОроЩрпНроХро│рпН роЯрпЖро▓ро┐ро╡ро░ро┐ роЪрпЗро╡рпИроХрпНроХрпБ ро╡ро░ро╡рпЗро▒рпНроХро┐ро▒рпЛроорпН! ЁЯСЛ',
    loginMessage: 'роЖро░рпНроЯро░рпН роЪрпЖропрпНроп, родропро╡рпБроЪрпЖропрпНродрпБ роЙроЩрпНроХро│рпН родрпКро▓рпИрокрпЗроЪро┐ роОрогрпНрогрпБроЯройрпН роЙро│рпНроирпБро┤рпИропрпБроЩрпНроХро│рпН. роирпАроЩрпНроХро│рпН рокрпБродро┐роп ро╡ро╛роЯро┐роХрпНроХрпИропро╛ро│ро░ро╛роХ роЗро░рпБроирпНродро╛ро▓рпН, роиро╛роЩрпНроХро│рпН роЙроЩрпНроХро│рпБроХрпНроХрпБ роТро░рпБ роХрогроХрпНроХрпИ роЙро░рпБро╡ро╛роХрпНроХрпБро╡рпЛроорпН.',
    loginRegister: 'роЙро│рпНроирпБро┤рпИ / рокродро┐ро╡рпБ',
    welcomeBack: 'роорпАрогрпНроЯрпБроорпН ро╡ро░ро╡рпЗро▒рпНроХро┐ро▒рпЛроорпН',
    chooseCategory: 'роЖро░рпНроЯро░рпН роЪрпЖропрпНроп роЙроЩрпНроХро│рпБроХрпНроХрпБ роЙродро╡ роиро╛ройрпН роЗроЩрпНроХрпЗ роЗро░рпБроХрпНроХро┐ро▒рпЗройрпН. роТро░рпБ рокро┐ро░ро┐ро╡рпИродрпН родрпЗро░рпНроирпНродрпЖроЯрпБродрпНродрпБ роЖро░роорпНрокро┐роХрпНроХро▓ро╛роорпН.',
    phoneNumber: 'родрпКро▓рпИрокрпЗроЪро┐ роОрогрпН',
    enterPhone: 'роЙроЩрпНроХро│рпН родрпКро▓рпИрокрпЗроЪро┐ роОрогрпНрогрпИ роЙро│рпНро│ро┐роЯрпБроЩрпНроХро│рпН',
    continue: 'родрпКроЯро░рпН',
    cancel: 'ро░родрпНродрпБ',
    name: 'роЙроЩрпНроХро│рпН рокрпЖропро░рпН роОройрпНрой?',
    address: 'роЕро░рпБроорпИ! роЗрокрпНрокрпЛродрпБ родропро╡рпБроЪрпЖропрпНродрпБ роЙроЩрпНроХро│рпН роЯрпЖро▓ро┐ро╡ро░ро┐ роорпБроХро╡ро░ро┐ропрпИ ро╡ро┤роЩрпНроХро╡рпБроорпН:',
    registrationSuccess: 'роЪро░ро┐ропро╛роХ! роЙроЩрпНроХро│рпН роХрогроХрпНроХрпБ роЙро░рпБро╡ро╛роХрпНроХрокрпНрокроЯрпНроЯродрпБ',
    chooseShop: 'роЪро┐ро▒роирпНрод родрпЗро░рпНро╡рпБ! роЗрокрпНрокрпЛродрпБ родропро╡рпБроЪрпЖропрпНродрпБ роТро░рпБ роХроЯрпИропрпИродрпН родрпЗро░рпНроирпНродрпЖроЯрпБроЩрпНроХро│рпН:',
    loadingShops: 'роХроЯрпИроХро│рпН роПро▒рпНро▒рокрпНрокроЯрпБроХро┐ройрпНро▒рой...',
    loadingProducts: 'родропро╛ро░ро┐рокрпНрокрпБроХро│рпН роПро▒рпНро▒рокрпНрокроЯрпБроХро┐ройрпНро▒рой...',
    noShops: 'рооройрпНройро┐роХрпНроХро╡рпБроорпН, родро▒рпНрокрпЛродрпБ роХроЯрпИроХро│рпН роХро┐роЯрпИроХрпНроХро╡ро┐ро▓рпНро▓рпИ',
    noProducts: 'рооройрпНройро┐роХрпНроХро╡рпБроорпН, родро▒рпНрокрпЛродрпБ родропро╛ро░ро┐рокрпНрокрпБроХро│рпН роХро┐роЯрпИроХрпНроХро╡ро┐ро▓рпНро▓рпИ',
    addedToCart: 'рокрпКро░рпБро│рпН роХро╛ро░рпНроЯрпНроЯро┐ро▓рпН роЪрпЗро░рпНроХрпНроХрокрпНрокроЯрпНроЯродрпБ! роирпАроЩрпНроХро│рпН ро╖ро╛рокрпНрокро┐роЩрпНроХрпИ родрпКроЯро░ро▓ро╛роорпН роЕро▓рпНро▓родрпБ роЪрпЖроХрпНроЕро╡рпБроЯрпНроЯрпБроХрпНроХрпБ роЪрпЖро▓рпНро▓ро▓ро╛роорпН.',
    continueShopping: 'ро╖ро╛рокрпНрокро┐роЩрпНроХрпИ родрпКроЯро░рпН',
    proceedToCheckout: 'роЪрпЖроХрпНроЕро╡рпБроЯрпНроЯрпБроХрпНроХрпБ роЪрпЖро▓рпН',
    orderSummary: 'роЪро░ро┐ропро╛роХ! роЗродрпЛ роЙроЩрпНроХро│рпН роЖро░рпНроЯро░рпН роЪрпБро░рпБроХрпНроХроорпН:',
    category: 'рокро┐ро░ро┐ро╡рпБ',
    shop: 'роХроЯрпИ',
    items: 'рокрпКро░рпБроЯрпНроХро│рпН',
    total: 'роорпКродрпНродроорпН',
    confirmOrder: 'роЗроирпНрод роЖро░рпНроЯро░рпИ роЙро▒рпБродро┐рокрпНрокроЯрпБродрпНрод ро╡ро┐ро░рпБроорпНрокрпБроХро┐ро▒рпАро░рпНроХро│ро╛?',
    confirmOrderBtn: 'роЖро░рпНроЯро░рпИ роЙро▒рпБродро┐рокрпНрокроЯрпБродрпНродрпБ',
    editOrder: 'роЖро░рпНроЯро░рпИ родро┐ро░рпБродрпНродрпБ',
    orderSuccess: 'ЁЯОЙ роЖро░рпНроЯро░рпН ро╡рпЖро▒рпНро▒ро┐роХро░рооро╛роХ ро╡рпИроХрпНроХрокрпНрокроЯрпНроЯродрпБ!',
    orderMessage: 'роЙроЩрпНроХро│рпН роЖро░рпНроЯро░рпН родро╛ройро╛роХро╡рпЗ роОроЩрпНроХро│рпН роиро┐ро░рпНро╡ро╛роХ рокрпЗройро▓рпБроХрпНроХрпБ роЕройрпБрокрпНрокрокрпНрокроЯрпНроЯродрпБ, ро╡ро┐ро░рпИро╡ро┐ро▓рпН роЪрпЖропро▓ро╛роХрпНроХрокрпНрокроЯрпБроорпН. роЙроЩрпНроХро│рпН роЖро░рпНроЯро░рпН роиро┐ро▓рпИ роорпЗроорпНрокроЯрпБродрпНродро▓рпНроХро│рпИрокрпН рокрпЖро▒рпБро╡рпАро░рпНроХро│рпН. роОроЩрпНроХро│рпН роЪрпЗро╡рпИропрпИродрпН родрпЗро░рпНроирпНродрпЖроЯрпБродрпНродродро▒рпНроХрпБ роиройрпНро▒ро┐!',
    food: 'роЙрогро╡рпБ',
    grocery: 'рооро│ро┐роХрпИ',
    vegetables: 'роХро╛ропрпНроХро▒ро┐роХро│рпН',
    meat: 'роЗро▒рпИроЪрпНроЪро┐',
    orderAssistant: 'роЖро░рпНроЯро░рпН роЙродро╡ро┐ропро╛ро│ро░рпН',
    selectLanguage: 'роорпКро┤ро┐ропрпИродрпН родрпЗро░рпНроирпНродрпЖроЯрпБроХрпНроХро╡рпБроорпН'
  }
};

const LanguageContext = createContext<LanguageContextType | undefined>(undefined);

export const useLanguage = () => {
  const context = useContext(LanguageContext);
  if (!context) {
    throw new Error('useLanguage must be used within a LanguageProvider');
  }
  return context;
};

export const LanguageProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {
  const [language, setLanguageState] = useState<Language>('english');

  useEffect(() => {
    const savedLanguage = localStorage.getItem('customer_language') as Language;
    if (savedLanguage && ['english', 'malayalam', 'tamil'].includes(savedLanguage)) {
      setLanguageState(savedLanguage);
    }
  }, []);

  const setLanguage = (newLanguage: Language) => {
    console.log('Setting language to:', newLanguage);
    setLanguageState(newLanguage);
    localStorage.setItem('customer_language', newLanguage);
  };

  const t = (key: string): string => {
    const translation = translations[language]?.[key] || translations.english[key] || key;
    console.log(`Translation for ${key} in ${language}:`, translation);
    return translation;
  };

  return (
    <LanguageContext.Provider value={{ language, setLanguage, t }}>
      {children}
    </LanguageContext.Provider>
  );
};
